openapi: 3.0.3
info:
  title: Backend project for following expenses
  version: 1.0.0
  description: |-
    This is a simple backend API for keeping a database on various expenses. 
    The database is hosted on seperate server and deployed by using [Render](https://render.com/).
  contact:
    name: Hilla Hotakainen
    email: hilla.hotakainen@outlook.com
servers:
  - url: https://project-igip.onrender.com/api

paths:
  /expenses:
    get:
      description: Returns list of all expenses
      responses:
        "200":
          description: Succesfully returned list of expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    date:
                      type: string
                    amount:
                      type: integer
                    shop:
                      type: string
                    category:
                      type: string
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
    post:
      description: Creates a new expense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                amount:
                  type: integer
                shop:
                  type: string
                category:
                  type: string
      responses:
        "201":
          description: Created new expense
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/expense"
    put:
      description: updates an exsisting expense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/expense"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/expense"

  /expenses/{id}:
    delete:
      description: Delete a specific expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Expense deleted
          content:
            text/plain:
              example: Expense deleted

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    expense:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        amount:
          type: integer
        shop:
          type: string
        category:
          type: string
